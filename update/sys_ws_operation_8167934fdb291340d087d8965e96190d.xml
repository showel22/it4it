<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>POST</http_method>
        <name>Share to Group</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {
	
	var error, newDatacardGR;
	
	var groupGR = new GlideRecord('sys_user_group');
	groupGR.addQuery('sys_id', request.pathParams.GroupId);
	groupGR.query();
	if(groupGR.hasNext()){
		var datacardGR = new GlideRecord('x_gege9_it4it_data_cards');
		datacardGR.addQuery('sys_id', request.pathParams.DatacardId);
		datacardGR.query();
		if(datacardGR.hasNext()){
			groupGR.next();
			datacardGR.next();
			var groupMemberGR = new GlideRecord('sys_user_grmember');
			groupMemberGR.addQuery('group', groupGR.sys_id);
			groupMemberGR.addQuery('user', '!=', datacardGR.homepage_preference.user);
			groupMemberGR.query();
			if(groupMemberGR.hasNext()){
				while(groupMemberGR.next()){
					var preferenceGR = new GlideRecord('x_gege9_it4it_homepage_preferences');
					preferenceGR.addQuery('user', groupMemberGR.user);
					preferenceGR.query();
					if(preferenceGR.hasNext()){
						preferenceGR.next();
						newDatacardGR = new GlideRecord('x_gege9_it4it_data_cards');
						newDatacardGR.initialize();
						newDatacardGR.homepage_preference = preferenceGR.sys_id;
						newDatacardGR.active = true;
						newDatacardGR.color = datacardGR.color;
						newDatacardGR.list_type = datacardGR.list_type;
						newDatacardGR.name = datacardGR.name;
						newDatacardGR.order = 0;
						newDatacardGR.query_condition = datacardGR.query_condition;
						newDatacardGR.table = datacardGR.table;
						newDatacardGR.vtb_lane_field = datacardGR.vtb_lane_field;
						newDatacardGR.state = 100;
						newDatacardGR.report = datacardGR.report;
						newDatacardGR.insert();
					}else{
						var hpGR = new GlideRecord('x_gege9_it4it_homepage_preferences');
						hpGR.initialize();
						hpGR.active = true;
						hpGR.user = groupMemberGR.user;
						hpGR.insert();
						newDatacardGR = new GlideRecord('x_gege9_it4it_data_cards');
						newDatacardGR.initialize();
						newDatacardGR.homepage_preference = hpGR.sys_id;
						newDatacardGR.active = true;
						newDatacardGR.color = datacardGR.color;
						newDatacardGR.list_type = datacardGR.list_type;
						newDatacardGR.name = datacardGR.name;
						newDatacardGR.order = 0;
						newDatacardGR.query_condition = datacardGR.query_condition;
						newDatacardGR.table = datacardGR.table;
						newDatacardGR.vtb_lane_field = datacardGR.vtb_lane_field;
						newDatacardGR.state = 100;
						newDatacardGR.report = datacardGR.report;
						newDatacardGR.insert();
					}
				}
				response.setBody({message:"The record has been created."});
				response.setStatus(200);
				return response;
			}else{
				//Error: No group members.
				error = new sn_ws_err.ServiceError();
				error.setStatus(404);
				error.setMessage('There are no members in this group.');
				return error;
			}
		}else{
			//Error: This datacard does not exist.
			error = new sn_ws_err.ServiceError();
			error.setStatus(404);
			error.setMessage('This datacard does not exist.');
			return error;
		}
	}else{
		//Error: This group does not exist.
		error = new sn_ws_err.ServiceError();
		error.setStatus(404);
		error.setMessage('This group does not exist.');
		return error;
	}

})(request, response);]]></operation_script>
        <operation_uri>/api/x_gege9_it4it/datacards/shareToGroup/{GroupId}/{DatacardId}</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/shareToGroup/{GroupId}/{DatacardId}</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>212607632</sys_created_by>
        <sys_created_on>2018-04-23 11:30:11</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>8167934fdb291340d087d8965e96190d</sys_id>
        <sys_mod_count>10</sys_mod_count>
        <sys_name>Share to Group</sys_name>
        <sys_package display_value="IT4IT" source="x_gege9_it4it">7938d16ddb64d300262950a45e9619c5</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="IT4IT">7938d16ddb64d300262950a45e9619c5</sys_scope>
        <sys_update_name>sys_ws_operation_8167934fdb291340d087d8965e96190d</sys_update_name>
        <sys_updated_by>212613457</sys_updated_by>
        <sys_updated_on>2019-09-19 16:54:51</sys_updated_on>
        <web_service_definition display_value="DataCards">894d66f9dbe09700262950a45e96192f</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
